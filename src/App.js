import { useEffect, useState } from 'react';
import './App.css';

function App() {
  const [tg, setTg] = useState(null);
  const [user, setUser] = useState(null);
  const [location, setLocation] = useState('start'); // —Ç–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è
  const [inventory, setInventory] = useState([]); // –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å

  useEffect(() => {
    const telegram = window.Telegram?.WebApp;
    if (telegram) {
      setTg(telegram);
      telegram.ready();
      telegram.expand();
      
      const initData = telegram.initDataUnsafe;
      setUser({
        id: initData.user?.id,
        firstName: initData.user?.first_name,
        lastName: initData.user?.last_name
      });
      
      telegram.MainButton.setText('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å');
      telegram.MainButton.show();
      telegram.MainButton.onClick(() => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
        telegram.showAlert(`–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: ${inventory.join(', ') || '–ø—É—Å—Ç'}`);
      });
    }

    return () => {
      if (telegram) {
        telegram.MainButton.offClick();
      }
    };
  }, [inventory]);

  const handleClose = () => {
    tg?.close();
  };

  // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ –ª–æ–∫–∞—Ü–∏—è–º
  const moveTo = (newLocation) => {
    setLocation(newLocation);
    tg?.showAlert(`–í—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏—Å—å –≤ ${newLocation}`);
  };

  // –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –æ–±—ä–µ–∫—Ç–æ–º
  const interact = () => {
    if (location === 'start') {
      // –ø—Ä–∏–º–µ—Ä –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
      setInventory(prev => [...prev, '–ö–ª—é—á']);
      tg?.showAlert('–í—ã –Ω–∞—à–ª–∏ –∫–ª—é—á!');
    } else {
      tg?.showAlert('–ù–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∑–¥–µ—Å—å.');
    }
  };

  if (!tg) {
    return <div>Loading Telegram Web App...</div>;
  }

  return (
    <div className="App">
      <h1>Neverlands üåç</h1>
      <h2>–ü—Ä–∏–≤–µ—Ç, {user?.firstName || '–ò–≥—Ä–æ–∫'}!</h2>
      
      <div className="game-area">
        <h3>–¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è: {location}</h3>
        <button onClick={() => moveTo('forest')}>–ò–¥—Ç–∏ –≤ –ª–µ—Å</button>
        <button onClick={() => moveTo('cave')}>–í–æ–π—Ç–∏ –≤ –ø–µ—â–µ—Ä—É</button>
        <button onClick={interact}>–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å</button>
      </div>

      <div className="status">
        <h4>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å:</h4>
        <ul>
          {inventory.length > 0 ? (
            inventory.map((item, index) => <li key={index}>{item}</li>)
          ) : (
            <li>–ü—É—Å—Ç–æ</li>
          )}
        </ul>
      </div>

      <button className="button" onClick={() => tg.showAlert('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Neverlands!')}>
        –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è
      </button>
      <button className="button close-button" onClick={handleClose}>
        –í—ã–π—Ç–∏
      </button>
    </div>
  );
}

export default App;